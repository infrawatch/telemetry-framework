apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  name: sa-telemetry-rules
  labels:
    role: sa-telemetry
spec:
  groups:
  - interval: 30s
    name: Metrics-Consumer-Health
    rules:
    - alert: consumer-down
      expr: rate(sa_collectd_total_amqp_processed_message_count[1m]) == 0
      annotations:
        description: '{{ $labels.service }} not processing messages for more than 30 secs.'
        summary:   down
      for: 30s
      labels:
        severity: critical
    - alert: HostDown
      expr: max_over_time(sa_collectd_last_metric_for_host_status[1m])==0
      annotations:
        description: '{{ $labels.instance }} not pushing metrics for 30s'
        summary:  '{{ $labels.instance }} collectd down'
      for: 30s
      labels:
        severity: critical
  - name: General Alerts
    interval: 1m
    rules:
    - alert: TestAlert
      expr: vector(1)
    - alert: HighErrorRate
      expr: job:request_latency_seconds:mean5m{job=~"sa-telemetry/metrics-consumer-.*"} > 0.5
      for: 10m
      labels:
        severity: page
      annotations:
        summary: High request latency
  - name: InstanceDown
    interval: 5s
    rules:
     # Alert for any instance that is unreachable for >5 minutes.
    - alert: InstanceDown
      expr: up == 0
      for: 5m
      labels:
        severity: page
      annotations:
        summary: "Instance {{ $labels.instance }} down"
        description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes."
  - name: NFVI Services_status
    interval: 30s
    rules:
    - alert: NFVI Service is down
      expr: avg_over_time(collectd_nfvi_service{job="collectd",service!~"zombieprocess-process"}[30s])==0
      for: 30s
      labels:
        severity: critical
      annotations:
        summary: NFVi service is down
        description: "NFVi service has been DOWN for more than 30 secs."
    - alert: Zombie process(es)
      expr: avg_over_time(collectd_nfvi_service{job="collectd",service="zombieprocess-process"}[30s])>0
      for: 30s
      labels:
        severity: critical
      annotations:
        summary: "{{ $value }} zombie process(es) found"
        description: "{{ $value }} zombie process(es) for more than 30 secs."

    - alert: System Rebooted
      expr: collectd_uptime{job="collectd"}< 60
#     for: {{ system_rebooted_for_time }}
      labels:
        severity: critical
      annotations:
        summary: "{% raw %}{{ $labels.instance }}{% endraw %} rebooted"
        description: "{% raw %}{{ $labels.instance }}{% endraw %} rebooted."
  - name: Infrastructure
    interval: 5s
    rules:
    - alert: memory full
      annotations:
        description: memory is going to be completely consumed.
        summary: memory full
      expr: sum(predict_linear(sa_collectd_memory{memory=~"free|cached|buffered"}[30m],1800))
        by (exported_instance) < 0
      for: 30m
      labels:
        severity: warning
    - alert: filesystem full
      annotations:
        description: file system will be fill in less than 4 hrs.
        summary: FS full
      expr: predict_linear(sa_collectd_df_df_complex{df="root", type="free"}[4h],
        4* 3600) < 0
      for: 30m
      labels:
        severity: warning
    - alert: system idle
      annotations:
        description: system {{ $labels.instance }} idle
        summary: system idle
      expr: avg(avg_over_time(sa_collectd_load_midterm[1m])) by (exported_instance)
        < 0.3
      for: 30m
      labels:
        severity: warning
    - alert: cpu busy
      annotations:
        description: cpu busy
        summary: cpu busy
      expr: avg_over_time(sa_collectd_load_longterm[1m])  / ignoring(endpoint,type,
        service,load) count (avg_over_time(sa_collectd_cpu_total{type='user'}[1m]))
        by (exported_instance) > 0.8
      for: 30m
      labels:
        severity: warning
    - alert: io busy
      annotations:
        description: io busy
        summary: io busy
      expr: sum without (cpu,type,service) (rate(sa_collectd_cpu_total{type="wait"}[1m]))
         / sum without (cpu,type,service) (rate(sa_collectd_cpu_total{type!="wait"}[1m]))
            > bool 0.2
      for: 30m
      labels:
        severity: warning

  - name: openstack-api slow
    rules:
    - alert: openstack-api
      annotations:
        description: The OpenStack API for gnocchi responds slower than expected.
        summary: openstack api slow
      expr: avg_over_time(sa_collectd_curl_response_time_gnocchi[30s])
        > bool 0.2
      for: 3m
      labels:
        severity: pager
  - name: curl response time
    rules:
    - expr: sa_collectd_curl_response_time_gnocchi{curl="gnocchi"} <= bool 0.002
      record: job:curl:gnocchi
