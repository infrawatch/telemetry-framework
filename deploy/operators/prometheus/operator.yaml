apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: prometheus-operator
  name: prometheus-operator
  namespace: sa-telemetry
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: prometheus-operator
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus-operator
    spec:
      containers:
      - args:
        - --kubelet-service=kube-system/kubelet
        - --config-reloader-image=docker-registry.default.svc:5000/sa-telemetry/prometheus-configmap-reloader:latest
        - --alertmanager-default-base-image=docker-registry.default.svc:5000/sa-telemetry/prometheus-alertmanager
        - --prometheus-config-reloader=docker-registry.default.svc:5000/sa-telemetry/prometheus-config-reloader:latest
        - --prometheus-default-base-image=docker-registry.default.svc:5000/sa-telemetry/prometheus
        image: docker-registry.default.svc:5000/sa-telemetry/prometheus-operator:latest
        imagePullPolicy: IfNotPresent
        name: prometheus-operator
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: prometheus-operator
      serviceAccountName: prometheus-operator
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
